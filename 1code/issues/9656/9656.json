{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "The most recent CppHostCLR sample demonstrates using ICLRRuntimeHost to execute a method but it only demonstrates how to use ICLRRuntimeHost::ExecuteInDefaultAppDomain.  \n \nThat method is rather limited in that it only executes static methods that have the signature: \n \n     static int pwzMethodName (String pwzArgument)\n \nAlso, that method only executes code in the default domain.  To reap the benefits of isolation and to control the code being executed many hosts would likely wish to execute code in separate AppDomains created for each client or each execution or whatever.  \n \nThe ICLRRuntimeHost::ExecuteInAppDomain method would seem to be the solution but the documentation (http://msdn.microsoft.com/en-us/library/ms164410.aspx) is somewhat lacking.  The FExecuteInDomainCallback type does not seem to be documented anywhere for example.",
    "LastUpdatedDate": "2013-02-21T18:59:40.94-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "1code",
    "ReportedDate": "2011-10-16T19:26:39.02-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Add Hosting Example for ICLRRuntimeHost::ExecuteInAppDomain",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 5,
    "Id": 9656
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hi,\r\n\r\nYou are spot on with the lack of documentation/sample code with FExecuteInDomainCallback type of call. It sounds like this is the way to replicate the functionalities available via the suposedly superseded ICorRuntimeHost and the _AppDomain you can retrieve from it, but there is no helpful sample code for it. \r\nWhat worked for me was with using ICorRuntimeHost as hinted in (http://social.msdn.microsoft.com/Forums/en/clr/thread/b54cce59-37fb-4fe5-b842-563ed5276fb9?prof=required)\r\n\r\nCheers.",
      "PostedDate": "2012-05-05T18:19:01.32-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hello FrankBoyne,\r\n\r\nThank you for using our free Microsoft All-In-One Code Framework Sample Request Service!   \r\n\r\nYour sample request is about how to use ICLRRuntimeHost::ExecuteInDefaultAppDomain.  If I misunderstood your requirement, please feel free to let me know. \r\n\r\nIs jperraud’s suggestion helpful? Please feel free to let us know if you have any questions. \r\n\r\nThanks and have a great day!\r\n\r\n--------------------\r\nMicrosoft All-In-One Code Framework \r\nFeedback address: onecode@microsoft.com \r\n",
      "PostedDate": "2012-09-25T23:28:06.677-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hello mapeng,\r\n\r\nYes, part of my my suggestion was that an example of how to use ExecuteInDefaultAppDomain would be helpful.  \r\n\r\nThe other part of my suggestion is that an example of how to run code in a domain that is not the default domain would also be useful.\r\n\r\nThe suggestion from jperraud was helpful but there is some confusion since on the one hand ICorRuntimeHost is supersceded by ICLRRuntimeHost but on the other hand ICLRRuntimeHost does not support CreateDomain or CreateDomainEx.  \r\n\r\nAn example showing how to call ICLRRuntimeHost::ExecuteInAppDomain and how to create an App Domain to use in that call without using interfaces that have been supersceded would be helpful.",
      "PostedDate": "2012-09-26T21:30:31.833-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:59:40.94-08:00",
      "Id": -2147483648
    }
  ]
}