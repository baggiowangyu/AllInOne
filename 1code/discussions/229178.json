[
  {
    "Id": "500596",
    "ThreadId": "229178",
    "Html": "<p>Hello,</p>\r\n<p>First, thanks for the excellent example. It was exactly what we needed to get started. I have created my CSharp EXE COM server and now I am trying to test it from within a C# forms application.</p>\r\n<p>I was able to get access to the object using the following late-binding code, where m_PNConvObject is a private&nbsp;object in the forms class:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> button1_Click(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n{\r\n    Type convProgID;\r\n\r\n    <span style=\"color:blue\">try</span>\r\n    {\r\n        <span style=\"color:blue\">if</span> (m_PNConvObject == <span style=\"color:blue\">null</span>)\r\n        {\r\n            <span style=\"color:green\">//Get the word object</span>\r\n            convProgID = Type.GetTypeFromProgID(<span style=\"color:#a31515\">&quot;Company.Toolkit.PNConvSrv&quot;</span>);\r\n\r\n            <span style=\"color:green\">//Create word object instance</span>\r\n            m_PNConvObject = Activator.CreateInstance(convProgID);\r\n        }\r\n    }\r\n    <span style=\"color:blue\">catch</span> (Exception ex)\r\n    {\r\n        MessageBox.Show( <span style=\"color:#a31515\">&quot;Error creating object: &quot;</span> + ex.ToString(), Application.ProductName + <span style=\"color:#a31515\">&quot;: Exception&quot;</span>);\r\n    }\r\n}\r\n</pre>\r\n<pre>\r\nIs there anyway to access this COM object by adding it to the References (via Project - Add Reference)? </pre>\r\n<pre>Thanks, </pre>\r\n<pre>Geekgrrl.</pre>\r\n<pre>&nbsp;</pre>\r\n</div>",
    "PostedDate": "2010-09-30T09:46:36.927-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "500897",
    "ThreadId": "229178",
    "Html": "<p>Tlb exported from .NET assembly cannot be added as a reference by a .NET project, so you have to use late binding. I'm not aware of any other solutions. If you find any, please let me know.</p>",
    "PostedDate": "2010-10-01T02:24:40.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "501059",
    "ThreadId": "229178",
    "Html": "<p>Thanks for the response. That is what I though but as we are relatively new to COM in C# I wanted to make sure I wasn't missing anything simple.</p>\r\n<p>I am now trying to hook, (in my C# test program)&nbsp;to the event that my CSComExeServer throws,&nbsp; FloatPropertyChanging, using reflection. Do you know of any samples that can demonstrate how to do this?</p>\r\n<p>My event is declared as follows:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>[Guid(PNConvSrv.EventsId), ComVisible(<span style=\"color:blue\">true</span>)]\r\n[InterfaceType(ComInterfaceType.InterfaceIsDual)]\r\n<span style=\"color:blue\">public</span> <span style=\"color:blue\">interface</span> IPNConvSrvEvents\r\n{\r\n\r\n    [DispId(1)]\r\n    <span style=\"color:blue\">void</span> MessageAdded(<span style=\"color:blue\">string</span> Message);\r\n\r\n}\r\n\r\n<span style=\"color:green\">// ... declared in my class as </span>\r\n\r\n[ComVisible(<span style=\"color:blue\">true</span>)]\r\n<span style=\"color:blue\">public</span> <span style=\"color:blue\">delegate</span> <span style=\"color:blue\">void</span> MessageAddedEventHandler(<span style=\"color:blue\">string</span> strMessage);\r\n<span style=\"color:blue\">public</span> <span style=\"color:blue\">event</span> MessageAddedEventHandler MessageAdded;\r\n\r\n</pre>\r\n</div>\r\n<p>I've been working with the following code to try and add an event handler:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:green\">// Add event handler</span>\r\n\r\n<span style=\"color:green\">// Get info on event that exists in that instance:</span>\r\n<span style=\"color:green\">// Tried _MessageAdded, MessageAddedEventHandler, _MessageAddedEventHandler,</span>\r\n<span style=\"color:green\">//      IPNConvSrvEvents_MessageAddedEventHandler, _IPNConvSrvEvents_MessageAddedEventHandler</span>\r\n<span style=\"color:green\">// This always returns NULL????</span>\r\nEventInfo eventInfo = <span style=\"color:blue\">this</span>.m_PNConvSrvType.GetEvent(<span style=\"color:#a31515\">&quot;MessageAdded&quot;</span>, \r\n     (\r\n     System.Reflection.BindingFlags.Instance |\r\n     System.Reflection.BindingFlags.Public |\r\n     System.Reflection.BindingFlags.IgnoreCase\r\n     )\r\n );\r\n\r\n<span style=\"color:green\">// Get my application's event handler</span>\r\nMethodInfo methodInfoOfEventHandler =\r\n    <span style=\"color:blue\">typeof</span>(Program).GetMethod(<span style=\"color:#a31515\">&quot;PNConvSrv_MessageAddedHandler&quot;</span>,\r\n    (\r\n    BindingFlags.Static |\r\n    BindingFlags.Public)\r\n);\r\n\r\n<span style=\"color:green\">// Create delegate</span>\r\n<span style=\"color:green\">// Getting NullArgumentException here ...</span>\r\nSystem.Delegate delegateObj =\r\n    Delegate.CreateDelegate(\r\n        eventInfo.EventHandlerType,\r\n        <span style=\"color:blue\">null</span>,\r\n        methodInfoOfEventHandler);\r\n\r\n<span style=\"color:green\">//Attach to COM Server Event with the delegate of the the EventHandler within this static clas:</span>\r\neventInfo.GetAddMethod().Invoke(m_PNConvObject, <span style=\"color:blue\">new</span> <span style=\"color:blue\">object</span>[] { delegateObj });\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Any thoughts or pointers to other references would be greatly appreciated.</p>\r\n<p>Thanks,</p>\r\n<p>Geekgrrl.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-10-01T06:45:31.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]