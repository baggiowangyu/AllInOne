[
  {
    "Id": "897266",
    "ThreadId": "390801",
    "Html": "\r\n<p><span style=\"font-size:small\">I am trying to open an XPS document in a WPF DocumentViewer without success.&nbsp; I can click on my xps file and view it in xpsViewer, but not in my WPF app.&nbsp;The only code I could find in my books or on the internet is\r\n below. I can step through the code using the debugger, and it appears to recognize and grasp the information in my xps document, everything that is but the DocumentViewer named docViewer2. Can anyone tell me what I need to do to open this file?\r\n</span></p>\r\n<p><span style=\"font-size:small\">The Xps Class, at the bottom, was suggested and developed by the intellisense of the display code. I&rsquo;m using VS 2010 Express, and I&rsquo;m beginning to suspect that the Express version doesn&rsquo;t have the ability to\r\n open a WPF DocumentViewer. On page 968 of Matthew MacDonald&rsquo;s book, <em>Pro WPF in VB 2010</em>, he states that there are FlowDocument containers (FlowDocumentReader, FlowDocumentScrollViewer, and FlowDocumentPageViewer), and for Fixed Documents (DocumentViewer).\r\n But there is neither DocumentReader or DocumentPageViewer in the Express version, only the ScrollViewer and DocumentViewer. He gives the code to load an XPS file into memory and show it in a DocumentViewer that is similar to the code below, but it doesn&rsquo;t\r\n work either. What&rsquo;s the answer?</span></p>\r\n<p>I found the answer in Rod Stephens book, <em>WPF Programmer&rsquo;s Reference</em> - 2010, by Wiley Publishing, Inc.</p>\r\n<p>Finally, you can make a WPF application display an XPS file inside a DocumentViewer control.</p>\r\n<p>To do that, first add a reference to the ReachFramework library.</p>\r\n<p>In Expression Blend, open the Project menu and select &quot;Add Reference.&quot; Browse to the</p>\r\n<p>ReachFramework DLL (on my system, it&rsquo;s at \\Program Files\\Reference Assemblies\\Microsoft\\</p>\r\n<p>Framework\\v3.0\\ReachFramework.dll) and click Open.</p>\r\n<p>In Visual Studio, open the Project menu and select &quot;Add Reference.&quot; On the Add Reference dialog, select the .NET tab, select the ReachFramework entry, and click OK.</p>\r\n<p>Now you can write code-behind to load an XPS document into a DocumentViewer control. To make using the necessary classes easier, you can add the following using statement to the program:</p>\r\n<p><span style=\"font-size:small\"><span style=\"font-size:x-small\">I could then use the code below.</span>&nbsp;</span></p>\r\n<pre>Imports System.IO\r\nImports System.Windows.Xps\r\nImports System.Windows.Xps.Packaging</pre>\r\n<pre><pre>' &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; Display the new XPS document in docViewer2 &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;\r\n        ' Documents have to be stored in bin/Debug of VS 2012 in order for them to be found?\r\n        Dim doc As New XpsDocument(&quot;QueueCode1.xps&quot;, FileAccess.Read)\r\n        docViewer2.Document = doc.GetFixedDocumentSequence()\r\n        doc.Close()</pre>\n</pre>\r\n",
    "PostedDate": "2012-08-08T15:13:58.423-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]